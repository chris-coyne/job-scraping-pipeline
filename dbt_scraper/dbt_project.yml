
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbt_scraper'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt_models'

# These configurations specify where dbt should look for different types of files.de
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  job_scraping:
    raw:
      +schema: raw

      #Only need below if I want to define unique keys at a schema level, 
      #if they are at model level they live in model config. Model config overrides dbt_project config

      #+materialized: incremental
      #+on_schema_change: "append"

      #companies:
        #+unique_key: "id"
      #jobs:
       # +unique_key: "job_url"
      

    staging:
      +schema: staging
      #+materialized: incremental
      #+unique_key: "id"
      #+on_schema_change: "append"

    intermediate:
      +schema: intermediate
      +materialized: table

    marts:
      +schema: marts
      +materialized: table